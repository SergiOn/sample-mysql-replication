<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.nagaseyasuhito</groupId>
	<artifactId>sample-mysql-replication</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<issueManagement>
		<system>github</system>
		<url>https://github.com/nagaseyasuhito/sample-mysql-replication</url>
	</issueManagement>

	<ciManagement>
		<system>travis-ci</system>
		<url>https://travis-ci.org/nagaseyasuhito/sample-mysql-replication</url>
	</ciManagement>

	<scm>
		<url>https://github.com/nagaseyasuhito/sample-mysql-replication</url>
		<connection>scm:git:git@github.com:nagaseyasuhito/sample-mysql-replication.git</connection>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>utf-8</project.reporting.outputEncoding>
		<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/repository</altDeploymentRepository>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<systemPropertyVariables>
						<javax.persistence.jdbc.url>jdbc:h2:mem:</javax.persistence.jdbc.url>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.16</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<systemPropertyVariables>
						<javax.persistence.jdbc.url>jdbc:mysql:replication://localhost:${mysql.master.port},localhost:${mysql.slave.port}/it</javax.persistence.jdbc.url>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>mysql-ports</id>
						<goals>
							<goal>reserve-network-port</goal>
						</goals>
						<configuration>
							<portNames>
								<portName>mysql.master.port</portName>
								<portName>mysql.slave.port</portName>
							</portNames>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.jcabi</groupId>
									<artifactId>mysql-dist</artifactId>
									<version>5.6.14</version>
									<classifier>${mysql.classifier}</classifier>
									<type>zip</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/mysql-dist</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.jcabi</groupId>
				<artifactId>jcabi-mysql-maven-plugin</artifactId>
				<version>0.8.1</version>
				<executions>
					<execution>
						<id>mysql-master</id>
						<goals>
							<goal>classify</goal>
							<goal>start</goal>
							<goal>stop</goal>
						</goals>
						<configuration>
							<port>${mysql.master.port}</port>
							<data>${project.build.directory}/mysql-master</data>
							<options>
								<option>server-id=${mysql.master.port}</option>
								<option>log-bin=mysql-bin</option>
							</options>
						</configuration>
					</execution>
					<execution>
						<id>mysql-slave</id>
						<goals>
							<goal>classify</goal>
							<goal>start</goal>
							<goal>stop</goal>
						</goals>
						<configuration>
							<port>${mysql.slave.port}</port>
							<data>${project.build.directory}/mysql-slave</data>
							<options>
								<option>server-id=${mysql.slave.port}</option>
								<option>relay-log=mysql-relay-bin</option>
							</options>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.33</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>com.mysql.jdbc.Driver</driver>
					<username>root</username>
					<password>root</password>
				</configuration>
				<executions>
					<execution>
						<id>change-master</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:mysql://localhost:${mysql.slave.port}</url>
							<sqlCommand>
								change master to
									master_host='localhost',
									master_port=${mysql.master.port},
									master_user='root',
									master_password='root';
								start slave;
								show slave status;
							</sqlCommand>
						</configuration>
					</execution>
					<execution>
						<id>create-database</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:mysql://localhost:${mysql.master.port}</url>
							<sqlCommand>
								<!-- rootデータベースはbinlog-ignore-dbされているので、テスト用DBを作成 -->
								create database it
							</sqlCommand>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>

	<dependencies>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<version>2.5.2</version>
		</dependency>
		<!--dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.3.7.Final</version>
		</dependency -->

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.33</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.182</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.14.8</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
			<version>2.5.2</version>
		</dependency>
		<!--dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>1.3.0.Final</version>
			<scope>provided</scope>
		</dependency -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>